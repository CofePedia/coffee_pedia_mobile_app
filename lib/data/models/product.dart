///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ProductDataCategory {
/*
{
  "id": 13,
  "order": 1,
  "slug": "Accessories",
  "icon": "http://adphp.coffepidia.com/files/computer-icons-clip-art-computer-file-scalable-vector-graphics-portable-network-graphics-png-favpng-RbgLxHPfaU1WDRFLUhVwSX8By.jpg",
  "name": "Accessories"
}
*/

  int? id;
  int? order;
  String? slug;
  String? icon;
  String? name;

  ProductDataCategory({
    this.id,
    this.order,
    this.slug,
    this.icon,
    this.name,
  });
  ProductDataCategory.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    order = json['order']?.toInt();
    slug = json['slug']?.toString();
    icon = json['icon']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['order'] = order;
    data['slug'] = slug;
    data['icon'] = icon;
    data['name'] = name;
    return data;
  }
}

class ProductDataOverview {
/*
{
  "region": "",
  "brand": "Wacaco",
  "roast": "",
  "flavor": ""
}
*/

  String? region;
  String? brand;
  String? roast;
  String? flavor;

  ProductDataOverview({
    this.region,
    this.brand,
    this.roast,
    this.flavor,
  });
  ProductDataOverview.fromJson(Map<String, dynamic> json) {
    region = json['region']?.toString();
    brand = json['brand']?.toString();
    roast = json['roast']?.toString();
    flavor = json['flavor']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['region'] = region;
    data['brand'] = brand;
    data['roast'] = roast;
    data['flavor'] = flavor;
    return data;
  }
}

class ProductDataVendor {
/*
{
  "id": 61,
  "logo": "https://api-staging.coffepidia.com/saved_images/logo/8XxG4OE8eDPhdD5cHyOFkJkr9M9b8VND8AZ9h3bn.jpg",
  "feature": [
    "Takeaway"
  ],
  "company_name": "my comamy",
  "cover_photo": "https://api-staging.coffepidia.com/saved_images/cover_photo/tVHLNO9XqmHo4CYFufWD7iZegswXTdjf0zNh4waZ.jpg",
  "description": null,
  "address": "Address English",
  "map": null
}
*/

  int? id;
  String? logo;
  List<String?>? feature;
  String? companyName;
  String? coverPhoto;
  String? description;
  String? address;
  String? map;

  ProductDataVendor({
    this.id,
    this.logo,
    this.feature,
    this.companyName,
    this.coverPhoto,
    this.description,
    this.address,
    this.map,
  });
  ProductDataVendor.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    logo = json['logo']?.toString();
    if (json['feature'] != null) {
      final v = json['feature'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      feature = arr0;
    }
    companyName = json['company_name']?.toString();
    coverPhoto = json['cover_photo']?.toString();
    description = json['description']?.toString();
    address = json['address']?.toString();
    map = json['map']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['logo'] = logo;
    if (feature != null) {
      final v = feature;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['feature'] = arr0;
    }
    data['company_name'] = companyName;
    data['cover_photo'] = coverPhoto;
    data['description'] = description;
    data['address'] = address;
    data['map'] = map;
    return data;
  }
}

class ProductData {
/*
{
  "id": 36,
  "description": "<p>Nanopresso M-Case is made of durable EVA material and soft fabric interior lining. It is specially designed to fit around the Nanopresso with the addition of the adapter ring from the NS Adapter or the Barista Kit. The case helps protect from any bumps, scratches and dust. With the addition of the Nanopresso M-Case be ready for your next big adventure. Note that the Nanopresso portable espresso machine, the NS Adapter and the Barista Kit showed on some of the pictures nearby are sold separately.</p>",
  "name": "Wacaco Nanopresso Case for Nanopresso + NS Adapter, Medium Size",
  "rate": null,
  "discount": 0,
  "price_before_discount": 400,
  "flavor_id": 0,
  "region_id": 0,
  "roast_id": 0,
  "brand_id": 2,
  "vendor_id": 61,
  "images": [
    "https://api-staging.coffepidia.com/saved_images/products/029-LD_bf17bf4e-2bb9-4b44-9a49-0ae04b50bd8b_720x.png"
  ],
  "image": "https://api-staging.coffepidia.com/saved_images/products/029-LD_bf17bf4e-2bb9-4b44-9a49-0ae04b50bd8b_720x.png",
  "vendor": {
    "id": 61,
    "logo": "https://api-staging.coffepidia.com/saved_images/logo/8XxG4OE8eDPhdD5cHyOFkJkr9M9b8VND8AZ9h3bn.jpg",
    "feature": [
      "Takeaway"
    ],
    "company_name": "my comamy",
    "cover_photo": "https://api-staging.coffepidia.com/saved_images/cover_photo/tVHLNO9XqmHo4CYFufWD7iZegswXTdjf0zNh4waZ.jpg",
    "description": null,
    "address": "Address English",
    "map": null
  },
  "overview": {
    "region": "",
    "brand": "Wacaco",
    "roast": "",
    "flavor": ""
  },
  "price": 400,
  "stock": 19,
  "in_wishlist": false,
  "category": {
    "id": 13,
    "order": 1,
    "slug": "Accessories",
    "icon": "http://adphp.coffepidia.com/files/computer-icons-clip-art-computer-file-scalable-vector-graphics-portable-network-graphics-png-favpng-RbgLxHPfaU1WDRFLUhVwSX8By.jpg",
    "name": "Accessories"
  },
  "sub_category": ""
}
*/

  int? id;
  String? description;
  String? name;
  int? rate;
  int? discount;
  int? priceBeforeDiscount;
  int? flavorId;
  int? regionId;
  int? roastId;
  int? brandId;
  int? vendorId;
  List<String?>? images;
  String? image;
  ProductDataVendor? vendor;
  ProductDataOverview? overview;
  int? price;
  int? stock;
  bool? inWishlist;
  ProductDataCategory? category;
  String? subCategory;

  ProductData({
    this.id,
    this.description,
    this.name,
    this.rate,
    this.discount,
    this.priceBeforeDiscount,
    this.flavorId,
    this.regionId,
    this.roastId,
    this.brandId,
    this.vendorId,
    this.images,
    this.image,
    this.vendor,
    this.overview,
    this.price,
    this.stock,
    this.inWishlist,
    this.category,
    this.subCategory,
  });
  ProductData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    description = json['description']?.toString();
    name = json['name']?.toString();
    rate = json['rate'] == null ? 0 : json['rate'].toInt();
    discount = json['discount'] == null ? 0 : json['discount'].toInt();

    priceBeforeDiscount = json['price_before_discount']?.toInt();
    flavorId = json['flavor_id']?.toInt();
    regionId = json['region_id']?.toInt();
    roastId = json['roast_id']?.toInt();
    brandId = json['brand_id']?.toInt();
    vendorId = json['vendor_id']?.toInt();
    if (json['images'] != null) {
      final v = json['images'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      images = arr0;
    }
    image = json['image']?.toString();
    vendor = (json['vendor'] != null)
        ? ProductDataVendor.fromJson(json['vendor'])
        : null;
    overview = (json['overview'] != null)
        ? ProductDataOverview.fromJson(json['overview'])
        : null;
    price = json['price']?.toInt();
    stock = json['stock']?.toInt();
    inWishlist = json['in_wishlist'];
    category = (json['category'] != null)
        ? ProductDataCategory.fromJson(json['category'])
        : null;
    subCategory = json['sub_category']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['description'] = description;
    data['name'] = name;
    data['rate'] = rate;
    data['discount'] = discount;
    data['price_before_discount'] = priceBeforeDiscount;
    data['flavor_id'] = flavorId;
    data['region_id'] = regionId;
    data['roast_id'] = roastId;
    data['brand_id'] = brandId;
    data['vendor_id'] = vendorId;
    if (images != null) {
      final v = images;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['images'] = arr0;
    }
    data['image'] = image;
    if (vendor != null) {
      data['vendor'] = vendor!.toJson();
    }
    if (overview != null) {
      data['overview'] = overview!.toJson();
    }
    data['price'] = price;
    data['stock'] = stock;
    data['in_wishlist'] = inWishlist;
    if (category != null) {
      data['category'] = category!.toJson();
    }
    data['sub_category'] = subCategory;
    return data;
  }
}

class Product {
/*
{
  "data": {
    "id": 36,
    "description": "<p>Nanopresso M-Case is made of durable EVA material and soft fabric interior lining. It is specially designed to fit around the Nanopresso with the addition of the adapter ring from the NS Adapter or the Barista Kit. The case helps protect from any bumps, scratches and dust. With the addition of the Nanopresso M-Case be ready for your next big adventure. Note that the Nanopresso portable espresso machine, the NS Adapter and the Barista Kit showed on some of the pictures nearby are sold separately.</p>",
    "name": "Wacaco Nanopresso Case for Nanopresso + NS Adapter, Medium Size",
    "rate": null,
    "discount": 0,
    "price_before_discount": 400,
    "flavor_id": 0,
    "region_id": 0,
    "roast_id": 0,
    "brand_id": 2,
    "vendor_id": 61,
    "images": [
      "https://api-staging.coffepidia.com/saved_images/products/029-LD_bf17bf4e-2bb9-4b44-9a49-0ae04b50bd8b_720x.png"
    ],
    "image": "https://api-staging.coffepidia.com/saved_images/products/029-LD_bf17bf4e-2bb9-4b44-9a49-0ae04b50bd8b_720x.png",
    "vendor": {
      "id": 61,
      "logo": "https://api-staging.coffepidia.com/saved_images/logo/8XxG4OE8eDPhdD5cHyOFkJkr9M9b8VND8AZ9h3bn.jpg",
      "feature": [
        "Takeaway"
      ],
      "company_name": "my comamy",
      "cover_photo": "https://api-staging.coffepidia.com/saved_images/cover_photo/tVHLNO9XqmHo4CYFufWD7iZegswXTdjf0zNh4waZ.jpg",
      "description": null,
      "address": "Address English",
      "map": null
    },
    "overview": {
      "region": "",
      "brand": "Wacaco",
      "roast": "",
      "flavor": ""
    },
    "price": 400,
    "stock": 19,
    "in_wishlist": false,
    "category": {
      "id": 13,
      "order": 1,
      "slug": "Accessories",
      "icon": "http://adphp.coffepidia.com/files/computer-icons-clip-art-computer-file-scalable-vector-graphics-portable-network-graphics-png-favpng-RbgLxHPfaU1WDRFLUhVwSX8By.jpg",
      "name": "Accessories"
    },
    "sub_category": ""
  }
}
*/

  ProductData? data;

  Product({
    this.data,
  });
  Product.fromJson(Map<String, dynamic> json) {
    data = (json['data'] != null) ? ProductData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};

    return data;
  }
}
